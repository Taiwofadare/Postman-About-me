{
	"info": {
		"_postman_id": "4e253e1e-076b-42c7-813c-7683d834085d",
		"name": "STSTStudentCourse",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "31039704"
	},
	"item": [
		{
			"name": "Get All Todo Entries",
			"item": [
				{
					"name": "Get All Todo Entries",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"console.log(jsonData.categories)\r",
									"console.log(jsonData.title)\r",
									"console.log(jsonData.apiVersion)\r",
									"console.log(jsonData.paymentCurrency)\r",
									"\r",
									"pm.environment.set(\"entitycategories\", \"authorization\");\r",
									"pm.environment.set(\"entitytitle\", \"Fusio\");\r",
									"pm.environment.set(\"entityapiVersion\", \"7.2.3.0\")\r",
									"pm.environment.set(\"entitypaymentCurrency\",\"EUR\")\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"pm.test(\"Status code should be 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code name should have an OK string\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"console.log(jsonData)\r",
									"console.log(jsonData.categories)\r",
									"console.log(jsonData.title)\r",
									"console.log(jsonData.paymentCurrency)\r",
									"console.log(jsonData.apiVersion)\r",
									"console.log(jsonData.categories)\r",
									"\r",
									"pm.test(\"confirm response body has backend\", function () {\r",
									"    pm.expect(jsonData.categories).to.include(\"backend\");\r",
									"});\r",
									"\r",
									"pm.test(\"confirm response body has consumer\", function () {\r",
									"    pm.expect(jsonData.categories).to.include(\"consumer\");\r",
									"});\r",
									"\r",
									"pm.test(\"confirm title is eql to (Fusio) \", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.title).to.eql(\"Fusio\");\r",
									"});\r",
									"\r",
									"pm.test(\"confirm paymentCurrency is eql to (EUR) \", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.paymentCurrency).to.eql(\"EUR\");\r",
									"});\r",
									"\r",
									"pm.test(\"confirm apiVersion is eql to (7.2.3.0)\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.apiVersion).to.eql(\"7.2.3.0\");\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"/**\r",
									" * \r",
									" * pm.test(\"Body is correct\", function () {\r",
									"    pm.response.to.have.body(\"response_body_string\");\r",
									"});\r",
									" */\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseUrl}}",
							"host": [
								"{{baseUrl}}"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Get All Entries",
			"item": [
				{
					"name": "Get All Entries",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								""
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "https://demo.fusio-project.org/index.php/"
					},
					"response": []
				}
			]
		},
		{
			"name": "Get entry per ID",
			"item": [
				{
					"name": "Get entry per ID - Valid ID",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseUrl}}?={{entitytitle}}",
							"host": [
								"{{baseUrl}}"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"value": "{{entitytitle}}"
								}
							]
						},
						"description": "https://demo.fusio-project.org/index.php/todo/:todo_id"
					},
					"response": []
				},
				{
					"name": "Get entry per ID - Invalid ID(params not using TODO ID)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}?=1000000",
							"host": [
								"{{baseUrl}}"
							],
							"query": [
								{
									"key": "",
									"value": "1000000"
								}
							]
						},
						"description": "https://demo.fusio-project.org/index.php/todo/:todo_id"
					},
					"response": []
				}
			]
		},
		{
			"name": "Get Books",
			"item": [
				{
					"name": "Get All Books",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"const response = pm.response.json();\r",
									"console.log(response[2].id);\r",
									"pm.environment.set(\"JustMeID\", response[2].id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "b27c10dbc466b125576c962064e794acb83f6921e46c63af6644044fb284bf24",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrlBook}}/books",
							"host": [
								"{{baseUrlBook}}"
							],
							"path": [
								"books"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Books by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"const response = pm.response.json();\r",
									"console.log(response[2].id);\r",
									"pm.environment.set(\"JustMeID\", response[2].id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "b27c10dbc466b125576c962064e794acb83f6921e46c63af6644044fb284bf24",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrlBook}}/books/:bookId",
							"host": [
								"{{baseUrlBook}}"
							],
							"path": [
								"books",
								":bookId"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "bookId",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Books by Type",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "b27c10dbc466b125576c962064e794acb83f6921e46c63af6644044fb284bf24",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrlBook}}/books?type=fiction",
							"host": [
								"{{baseUrlBook}}"
							],
							"path": [
								"books"
							],
							"query": [
								{
									"key": "type",
									"value": "fiction"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Place a book order",
			"item": [
				{
					"name": "Place a book order - using book ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/**pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});*/\r",
									"const OrderID = pm.response.json();\r",
									"\r",
									"console.log(OrderID.orderId);\r",
									"pm.environment.set(\"OrderId\", OrderID.orderId);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "b27c10dbc466b125576c962064e794acb83f6921e46c63af6644044fb284bf24",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"bookId\": {{JustMeID}},\n    \"customerName\": \"Taiwo\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrlBook}}/orders",
							"host": [
								"{{baseUrlBook}}"
							],
							"path": [
								"orders"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "425efbbcfed7ea59d9e8e26d267a7ca4e69b4416e06fd078bdf32af4bc6acb67",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Get an order",
			"item": [
				{
					"name": "Get all orders",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "b27c10dbc466b125576c962064e794acb83f6921e46c63af6644044fb284bf24",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrlBook}}/orders",
							"host": [
								"{{baseUrlBook}}"
							],
							"path": [
								"orders"
							],
							"query": [
								{
									"key": "OrderId",
									"value": "{{OrderId}}",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get an order - using orderID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "b27c10dbc466b125576c962064e794acb83f6921e46c63af6644044fb284bf24",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrlBook}}/orders/:orderId",
							"host": [
								"{{baseUrlBook}}"
							],
							"path": [
								"orders",
								":orderId"
							],
							"variable": [
								{
									"key": "orderId",
									"value": "{{OrderId}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Update an order",
			"item": [
				{
					"name": "Update an order",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "b27c10dbc466b125576c962064e794acb83f6921e46c63af6644044fb284bf24",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"bookId\": 1,\n    \"customerName\": \"Testify Academy\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrlBook}}/orders/",
							"host": [
								"{{baseUrlBook}}"
							],
							"path": [
								"orders",
								""
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Delete an order",
			"item": [
				{
					"name": "Delete an order",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "b27c10dbc466b125576c962064e794acb83f6921e46c63af6644044fb284bf24",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrlBook}}/orders/:orderId",
							"host": [
								"{{baseUrlBook}}"
							],
							"path": [
								"orders",
								":orderId"
							],
							"variable": [
								{
									"key": "orderId",
									"value": "{{OrderId}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Register API Client",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"clientName\": \"Taiwo\",\n    \"clientEmail\": \"ademolapeakcalm1@gmail.com\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrlBook}}/api-clients/",
					"host": [
						"{{baseUrlBook}}"
					],
					"path": [
						"api-clients",
						""
					],
					"query": [
						{
							"key": "",
							"value": "    \"accessToken\": \"0f78294ca232e0a961b4edcabdc90c55f42ab57f24f9ef287c9424fa2831bb85\"\n",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get API Status",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrlBook}}/status",
					"host": [
						"{{baseUrlBook}}"
					],
					"path": [
						"status"
					]
				}
			},
			"response": []
		}
	]
}